{"compress":true,"commitItems":[["93e1dd6f-4870-4372-9585-09390f8d2ea0",1534897095305,"# Linux/Mac OS下安装oh my zsh并配置主题和插件\n\n",[[1534897035757,["sun@sundeMacBook-Pro.local",[[1,36,"\n"]],[35,35],[36,36]]],[1534897036675,["sun@sundeMacBook-Pro.local",[[1,36,"## 安装oh my zsh\n\n1. 安装git 、zsh\n\n   + Linux(Ubuntu16.04)\n\n   ```bash\n   sudo apt-get install zsh git\n   ```\n\n   + Mac OS\n\n   ```bash\n   #先自行百度安装homebrew\n   brew install git\n   ```\n\n   \n\n2. 安装oh my zsh(两种系统命令相同)\n\n   ```bash\n   sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n   ```\n\n3. 修改主题：vim ～/.zshrc\n\n   ```bash\n   #找到对应行改为\n   ZSH_THEME=\"agnoster\"\n   ```\n\n   + source ~/.zshrc\n\n## 配置插件\n\n1. wd \n\n   + 它的作用就是能够快速的切换到常用的目录。 ​\t\t\t\n   + 我们用命令行时经常会遇到这样一种情况， 我们常用的目录就那么几个，而这些目录有时候会再很深的层级中。 使用 cd 命令在这些深层级目录中切换就比较耗费时间了。 ​\t\t\t\n   + 例如 Nginx的wwwroot目录/usr/share/nginx/html  ,我们进入这个目录，输入wd add html   #这个html这个名称是可以随便取的. 下次再进入这个目录就可以直接输入 wd thml\n   + wd用法：\n\n   ```\n   Usage: wd [command] [point]\n   \n   Commands:\n       add <point>     Adds the current working directory to your warp points\n       add             Adds the current working directory to your warp points with current directory's name\n       add! <point>    Overwrites existing warp point\n       add!            Overwrites existing warp point with current directory's name\n       rm <point>      Removes the given warp point\n       rm              Removes the given warp point with current directory's name\n       show <point>    Print path to given warp point\n       show            Print warp points to current directory\n       list            Print all stored warp points\n       ls  <point>     Show files from given warp point (ls)\n       path <point>    Show the path to given warp point (pwd)\n       clean!          Remove points warping to nonexistent directories\n   \n       -v | --version  Print version\n       -d | --debug    Exit after execution with exit codes (for testing)\n       -c | --config   Specify config file (default ~/.warprc)\n       -q | --quiet    Suppress all output\n   \n       help            Show this extremely helpful text\n   ```\n\n2. sudo\n\n   + 连按两次Esc添加或去掉sudo\n\n3. zsh-syntax-highlighting ​\t#高亮可用命令\n\n   1. Linux\n\n      ```bash\n      git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n      ```\n\n   2. Mac OS\n\n      ```bash\n      brew install zsh-syntax-highlighting\n      source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n      ```\n\n4. zsh-autosuggestions ​\t#记录上一条命令，并自动建议\n\n   ```bash\n   git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n   ```\n\n5. 安装\n\n+ 在～/.zshrc下配置\n\n```bash\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(\n  git\n  zsh-autosuggestions\n  zsh-syntax-highlighting\n  wd\n  sudo\n)\n```\n\n+ 最后source ~/.zshrc"]],[36,36],[2656,2656]]]],null,"sun@sundeMacBook-Pro.local"]]}